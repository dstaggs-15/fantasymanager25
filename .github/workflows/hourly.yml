name: Hourly Build and Deploy

on:
  schedule:
    - cron: "8 * * * *"   # at minute 8 each hour
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted  # <-- your IONOS runner label
    env:
      PYTHONUNBUFFERED: "1"
      LEAGUE_ID: "508419792"
      SEASON: "2025"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Python deps
        run: |
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: |
          python -m playwright install --with-deps chromium

      # ---- PLAYWRIGHT LOGIN TO GET COOKIES ----
      - name: Get ESPN cookies via Playwright
        env:
          ESPN_USER: ${{ secrets.ESPN_USER }}
          ESPN_PASS: ${{ secrets.ESPN_PASS }}
          GITHUB_ENV: ${{ env.GITHUB_ENV }}
        run: |
          python pipeline/get_espn_cookies.py --league "${{ env.LEAGUE_ID }}" --write-github-env "$GITHUB_ENV"
          echo "Got cookies. SWID and ESPN_S2 are now in GITHUB_ENV for later steps."

      # ---- FETCH LEAGUE/TEAMS ----
      - name: Fetch League (teams, meta)
        env:
          LEAGUE_ID: ${{ env.LEAGUE_ID }}
          SEASON: ${{ env.SEASON }}
          SWID: ${{ env.SWID }}
          ESPN_S2: ${{ env.ESPN_S2 }}
        run: |
          python pipeline/fetch_league.py

      # ---- FETCH ROSTERS (uses cloudscraper fallback + cookies) ----
      - name: Fetch Rosters
        env:
          LEAGUE_ID: ${{ env.LEAGUE_ID }}
          SEASON: ${{ env.SEASON }}
          SWID: ${{ env.SWID }}
          ESPN_S2: ${{ env.ESPN_S2 }}
        run: |
          python pipeline/fetch_rosters.py

      # ---- FETCH PLAYERS (public endpoint + cookies if needed) ----
      - name: Fetch Players
        env:
          LEAGUE_ID: ${{ env.LEAGUE_ID }}
          SEASON: ${{ env.SEASON }}
          SWID: ${{ env.SWID }}
          ESPN_S2: ${{ env.ESPN_S2 }}
        run: |
          python pipeline/fetch_players.py

      # ---- Commit data outputs ----
      - name: Commit and push data
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions[bot]"
          git add docs/data/*.json || true
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "robot: refresh $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
          fi
